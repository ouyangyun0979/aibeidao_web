<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<bean class="com.uhoo.uhooapi.web.spring.MyPropertyPlaceholderConfigurer"></bean>

	<!-- Scans the classpath of this application for @Components to deploy as beans -->
	<context:component-scan base-package="com.uhoo.uhooapi.app.services,com.uhoo.uhooapi.app.daos">
		<!-- 扫描符合@Service @Repository的类 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Repository" />
	</context:component-scan>
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	      <!-- 基本属性 url、user、password -->
	      <property name="url" value="${url}" />
	      <property name="username" value="${username}" />
	      <property name="password" value="${password}" />
	
	      <!-- 配置初始化大小、最小、最大 -->
	      <property name="initialSize" value="1" />
	      <property name="minIdle" value="1" /> 
	      <property name="maxActive" value="20" />
	
	      <!-- 配置获取连接等待超时的时间 -->
	      <property name="maxWait" value="60000" />
	
	      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	      <property name="timeBetweenEvictionRunsMillis" value="60000" />
	
	      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	      <property name="minEvictableIdleTimeMillis" value="300000" />
	
	      <property name="validationQuery" value="SELECT 'x'" />
	      <property name="testWhileIdle" value="true" />
	      <property name="testOnBorrow" value="false" />
	      <property name="testOnReturn" value="false" />
	
	      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
	      <property name="poolPreparedStatements" value="false" />
	      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
	      <!--<property name="removeAbandoned" value="true" />  打开removeAbandoned功能 -->
	      <!--<property name="removeAbandonedTimeout" value="1800" />  1800秒，也就是30分钟 -->
	      <!--<property name="logAbandoned" value="true" />  关闭abanded连接时输出错误日志 -->
	      
	      <!-- 配置监控统计拦截的filters -->
	      <property name="filters" value="stat" />
	      <property name="connectionProperties" value="druid.stat.slowSqlMillis=5000" />
	</bean>
	  
	<bean id="dataSource1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    	<property name="driverClassName" value="com.mysql.jdbc.Driver" />
    	<property name="url" value="${url}" />
    	<property name="username" value="${username}" />
    	<property name="password" value="${password}" />
    	<property name="maxWait" value="300000" />
    	<property name="initialSize" value="5" />
        <property name="maxActive" value="20" />
        <property name="maxIdle" value="5" />
        <property name="minIdle" value="5" />
        <property name="testWhileIdle" value="true" />
        <property name="timeBetweenEvictionRunsMillis" value="15000" />
        <property name="numTestsPerEvictionRun" value="20" />
        <property name="validationQuery" value="SELECT 1" />
        <property name="removeAbandoned" value="true" />
        <property name="removeAbandonedTimeout" value="180" />
        <property name="connectionProperties">
            <value>clientEncoding=utf-8</value>
        </property>
	</bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
        <property name="dataSource" ref="dataSource" />
    </bean>

	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="txManager" />
	
	<!--  
	<aop:config>
		<aop:pointcut id="serviceOperation" expression="execution(* com.uhoo.uhooapi.app.admin.iservice..*Service.*(..)),execution(* com.uhoo.uhooapi.app.website.iservice..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceOperation" />
	</aop:config>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="find*" propagation="REQUIRED" read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" read-only="true" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="process*" propagation="NEVER" />
			<tx:method name="clean*" propagation="REQUIRED" />
			<tx:method name="move*" propagation="REQUIRED" />
			<tx:method name="backup*" propagation="REQUIRED" />
			<tx:method name="login*" propagation="REQUIRED" />
			 <tx:method name="*" propagation="SUPPORTS" read-only="true" /> 
		</tx:attributes>
	</tx:advice>
	-->
	
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="${mail.host}"></property> 
		<property name="port" value="${mail.port}"></property> 
		<property name="username" value="${mail.username}"></property>
		<property name="password" value="${mail.password}"></property> 
		<property name="javaMailProperties"> 
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.debug">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>  
				<!-- 
				<prop key="mail.smtp.starttls.enable">true</prop>
				<prop key="mail.smtp.socketFactory.port">${mail.port}</prop>
				<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
				<prop key="mail.smtp.socketFactory.fallback">false</prop>
				 -->
			</props>
		</property>
	</bean>
</beans>